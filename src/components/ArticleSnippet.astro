---
import { processArticleDate } from "../lib/utils";

interface Props {
  title: string;
  description: string;
  duration: string;
  url: string;
  timestamp: Date;
  variant?: 'featured' | 'default';
}

const { title, description, duration, url, timestamp, variant = 'default' } = Astro.props;
const formattedDate = processArticleDate(timestamp.toString());

// Random slight rotation for dates (-3 to 3 degrees)
const rotation = Math.floor(Math.random() * 7) - 3;
---

<a
  href={url}
  class={`
    block group relative overflow-hidden transition-all duration-300
    ${variant === 'featured'
      ? 'bg-sage text-white border-brutal p-8 hover:bg-sage-dark'
      : 'bg-white border-brutal-thin p-6 hover:border-brutal hover:border-sage'
    }
  `}
>
  <!-- Rotated date label -->
  <span
    class="absolute top-4 right-4 text-xs uppercase tracking-wider opacity-70"
    style={`transform: rotate(${rotation}deg);`}
  >
    {formattedDate}
  </span>

  <!-- Title -->
  <h3 class={`
    font-bold mb-3 pr-16
    ${variant === 'featured' ? 'text-3xl md:text-4xl' : 'text-2xl md:text-3xl'}
  `}>
    {title}
  </h3>

  <!-- Description -->
  <p class={`
    mb-4 leading-relaxed
    ${variant === 'featured' ? 'text-lg opacity-90' : 'text-base opacity-70'}
  `}>
    {description}
  </p>

  <!-- Reading time badge -->
  <div class="flex items-center gap-2">
    <span class={`
      text-xs uppercase tracking-wider font-bold px-3 py-1 border-brutal-thin
      ${variant === 'featured' ? 'bg-white text-black' : 'bg-black text-white'}
    `}>
      {duration}
    </span>
    <span class="text-sm group-hover:translate-x-1 transition-transform">â†’</span>
  </div>
</a>
